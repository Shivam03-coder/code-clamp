{
  "name": "dot-spinner",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "framer-motion"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\"\n\nimport { motion } from \"motion/react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface DotSpinnerProps {\n  size?: number\n  dotSize?: number\n  dotCount?: number\n  gap?: number\n  color?: string\n  speed?: number\n  className?: string\n}\n\nexport function DotSpinner({\n  size = 40,\n  dotSize = 8,\n  dotCount = 3,\n  gap = 4,\n  color = \"currentColor\",\n  speed = 1.2,\n  className,\n}: DotSpinnerProps) {\n  const totalWidth = dotCount * dotSize + (dotCount - 1) * gap\n  \n  return (\n    <div\n      className={cn(\"flex items-center justify-center\", className)}\n      style={{\n        width: size,\n        height: size,\n      }}\n      role=\"status\"\n      aria-label=\"Loading\"\n    >\n      <div\n        className=\"flex items-center justify-between\"\n        style={{\n          width: totalWidth,\n        }}\n      >\n        {Array.from({ length: dotCount }).map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"rounded-full\"\n            style={{\n              width: dotSize,\n              height: dotSize,\n              backgroundColor: color,\n            }}\n            animate={{\n              scale: [1, 1.5, 1],\n              opacity: [1, 0.5, 1],\n            }}\n            transition={{\n              duration: speed,\n              ease: \"easeInOut\",\n              repeat: Infinity,\n              delay: i * (speed / dotCount),\n            }}\n          />\n        ))}\n      </div>\n      \n      <span className=\"sr-only\">Loading</span>\n    </div>\n  )\n}\n",
      "path": "/components/code-clamp/spinner/dot-spinner.tsx",
      "target": "/components/code-clamp/dot-spinner.tsx"
    }
  ]
}