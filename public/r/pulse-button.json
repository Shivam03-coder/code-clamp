{
  "name": "pulse-button",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "framer-motion"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { motion } from \"motion/react\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\n\nexport interface PulseButtonProps extends React.ComponentProps<typeof Button> {\n  pulseColor?: string;\n  pulseDuration?: number;\n  pulseScale?: number;\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst PulseButton = React.forwardRef<HTMLButtonElement, PulseButtonProps>(\n  (\n    {\n      pulseColor = \"rgba(255, 255, 255, 0.3)\",\n      pulseDuration = 1.5,\n      pulseScale = 1.05,\n      className,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <div className=\"relative\">\n        <motion.div\n          className=\"absolute inset-0 rounded-md\"\n          style={{ backgroundColor: pulseColor }}\n          initial={{ opacity: 0, scale: 1 }}\n          animate={{\n            opacity: [0, 0.5, 0],\n            scale: [1, pulseScale, 1],\n          }}\n          transition={{\n            duration: pulseDuration,\n            repeat: Infinity,\n            repeatType: \"loop\",\n          }}\n        />\n        <Button ref={ref} className={cn(\"relative z-10\", className)} {...props}>\n          {children}\n        </Button>\n      </div>\n    );\n  },\n);\n\nPulseButton.displayName = \"PulseButton\";\n\nexport { PulseButton };\n",
      "path": "/components/code-clamp/button/pulse-button.tsx",
      "target": "/components/code-clamp/pulse-button.tsx"
    }
  ]
}