{
  "name": "glow-button",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "framer-motion"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { motion } from \"motion/react\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\n\nexport interface GlowButtonProps extends React.ComponentProps<typeof Button> {\n  glowColor?: string;\n  glowSize?: string;\n  glowOpacity?: number;\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst GlowButton = React.forwardRef<HTMLButtonElement, GlowButtonProps>(\n  (\n    {\n      glowColor = \"white\",\n      glowSize = \"40px\",\n      glowOpacity = 0.35,\n      className,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <div className=\"relative inline-block\">\n        <motion.div\n          className=\"absolute inset-0 rounded-md\"\n          initial={{ boxShadow: `0 0 0px ${glowColor}` }}\n          whileHover={{\n            boxShadow: `0 0 ${glowSize} ${glowColor}`,\n          }}\n          transition={{ duration: 0.3 }}\n          style={{ opacity: glowOpacity }}\n        />\n        <Button ref={ref} className={cn(\"relative z-10\", className)} {...props}>\n          {children}\n        </Button>\n      </div>\n    );\n  },\n);\n\nGlowButton.displayName = \"GlowButton\";\n\nexport { GlowButton };\n",
      "path": "/components/code-clamp/button/glow-button.tsx",
      "target": "/components/code-clamp/glow-button.tsx"
    }
  ]
}