{
  "name": "base-dialog",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "framer-motion"
  ],
  "registryDependencies": [
    "dialog"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  Dialog as ShadcnDialog,\n  DialogContent as ShadcnDialogContent,\n  DialogDescription as ShadcnDialogDescription,\n  DialogFooter as ShadcnDialogFooter,\n  DialogHeader as ShadcnDialogHeader,\n  DialogTitle as ShadcnDialogTitle,\n  DialogTrigger as ShadcnDialogTrigger,\n  DialogClose as ShadcnDialogClose,\n} from \"@/components/ui/dialog\";\n\nexport const animationVariants = {\n  fade: {\n    initial: { opacity: 0 },\n    animate: { opacity: 1 },\n    exit: { opacity: 0 },\n  },\n  scale: {\n    initial: { opacity: 0, scale: 0.9 },\n    animate: { opacity: 1, scale: 1 },\n    exit: { opacity: 0, scale: 0.95 },\n  },\n  slideUp: {\n    initial: { opacity: 0, y: 20 },\n    animate: { opacity: 1, y: 0 },\n    exit: { opacity: 0, y: 20 },\n  },\n  slideDown: {\n    initial: { opacity: 0, y: -20 },\n    animate: { opacity: 1, y: 0 },\n    exit: { opacity: 0, y: -20 },\n  },\n  slideLeft: {\n    initial: { opacity: 0, x: 20 },\n    animate: { opacity: 1, x: 0 },\n    exit: { opacity: 0, x: 20 },\n  },\n  slideRight: {\n    initial: { opacity: 0, x: -20 },\n    animate: { opacity: 1, x: 0 },\n    exit: { opacity: 0, x: -20 },\n  },\n  flip: {\n    initial: { opacity: 0, rotateX: 90 },\n    animate: { opacity: 1, rotateX: 0 },\n    exit: { opacity: 0, rotateX: 90 },\n  },\n};\n\nexport type AnimationVariant = keyof typeof animationVariants;\n\nexport interface AnimatedDialogContentProps\n  extends React.ComponentPropsWithoutRef<typeof ShadcnDialogContent> {\n  variant?: AnimationVariant;\n  duration?: number;\n  className?: string;\n  children?: React.ReactNode;\n  overlayClassName?: string;\n}\n\nexport const AnimatedDialogContent = React.forwardRef<\n  React.ElementRef<typeof ShadcnDialogContent>,\n  AnimatedDialogContentProps\n>(\n  (\n    {\n      variant = \"fade\",\n      duration = 0.2,\n      className,\n      children,\n      overlayClassName,\n      ...props\n    },\n    ref,\n  ) => {\n    const selectedVariant = animationVariants[variant];\n\n    return (\n      <ShadcnDialogContent\n        ref={ref}\n        className={cn(\"border-none bg-transparent p-0 shadow-none\", className)}\n        {...props}\n      >\n        <motion.div\n          initial={selectedVariant.initial}\n          animate={selectedVariant.animate}\n          exit={selectedVariant.exit}\n          transition={{ duration }}\n          className={cn(\n            \"bg-background relative rounded-lg border p-6 shadow-lg\",\n            className,\n          )}\n        >\n          {children}\n        </motion.div>\n      </ShadcnDialogContent>\n    );\n  },\n);\nAnimatedDialogContent.displayName = \"AnimatedDialogContent\";\n\nexport interface AnimatedDialogProps {\n  trigger?: React.ReactNode;\n  children: React.ReactNode;\n  open?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  variant?: AnimationVariant;\n  duration?: number;\n  className?: string;\n  overlayClassName?: string;\n}\n\nexport function AnimatedDialog({\n  trigger,\n  children,\n  open,\n  onOpenChange,\n  variant = \"fade\",\n  duration = 0.2,\n  className,\n  overlayClassName,\n}: AnimatedDialogProps) {\n  return (\n    <ShadcnDialog open={open} onOpenChange={onOpenChange}>\n      {trigger && <ShadcnDialogTrigger asChild>{trigger}</ShadcnDialogTrigger>}\n      <AnimatePresence>\n        {open && (\n          <AnimatedDialogContent\n            variant={variant}\n            duration={duration}\n            className={className}\n            overlayClassName={overlayClassName}\n            forceMount\n          >\n            {children}\n          </AnimatedDialogContent>\n        )}\n      </AnimatePresence>\n    </ShadcnDialog>\n  );\n}\n\n// Re-export shadcn Dialog components\nexport const DialogTrigger = ShadcnDialogTrigger;\nexport const DialogClose = ShadcnDialogClose;\nexport const DialogHeader = ShadcnDialogHeader;\nexport const DialogFooter = ShadcnDialogFooter;\nexport const DialogTitle = ShadcnDialogTitle;\nexport const DialogDescription = ShadcnDialogDescription;\n",
      "path": "/components/code-clamp/dialog/base-dialog.tsx",
      "target": "/components/code-clamp/base-dialog.tsx"
    }
  ]
}