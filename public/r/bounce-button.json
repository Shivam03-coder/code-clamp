{
  "name": "bounce-button",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "framer-motion"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { motion } from \"motion/react\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\nexport interface BounceButtonProps  extends React.ComponentProps<typeof Button>  {\n  bounceStrength?: number\n  bounceDuration?: number\n  className?: string\n  children: React.ReactNode\n}\n\nconst BounceButton = React.forwardRef<HTMLButtonElement, BounceButtonProps>(\n  ({ \n    bounceStrength = 0.2, \n    bounceDuration = 0.4,\n    className, \n    children, \n    ...props \n  }, ref) => {\n    return (\n      <motion.div\n        whileTap={{\n          scale: [1, 1 - bounceStrength, 1 + bounceStrength/2, 1],\n          transition: {\n            duration: bounceDuration,\n            times: [0, 0.4, 0.7, 1]\n          }\n        }}\n        className=\"inline-block\"\n      >\n        <Button\n          ref={ref}\n          className={cn(className)}\n          {...props}\n        >\n          {children}\n        </Button>\n      </motion.div>\n    )\n  }\n)\n\nBounceButton.displayName = \"BounceButton\"\n\nexport { BounceButton }\n",
      "path": "/components/code-clamp/button/bounce-button.tsx",
      "target": "/components/code-clamp/bounce-button.tsx"
    }
  ]
}