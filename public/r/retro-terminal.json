{
  "name": "retro-terminal",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "framer-motion"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"motion/react\";\nimport { cn } from \"@/lib/utils\";\nimport { BaseTerminal, type TerminalProps } from \"./base-terminal\";\n\ntype RetroTerminalProps = TerminalProps & {\n  scanlines?: boolean;\n  flicker?: boolean;\n  glitch?: boolean;\n};\n\nexport function RetroTerminal({\n  className,\n  scanlines = true,\n  flicker = true,\n  glitch = true,\n  ...props\n}: RetroTerminalProps) {\n  const [glitchActive, setGlitchActive] = useState(false);\n\n  // Random glitch effect\n  useEffect(() => {\n    if (!glitch) return;\n\n    const glitchInterval = setInterval(() => {\n      if (Math.random() > 0.95) {\n        setGlitchActive(true);\n        setTimeout(() => setGlitchActive(false), 100 + Math.random() * 200);\n      }\n    }, 2000);\n\n    return () => clearInterval(glitchInterval);\n  }, [glitch]);\n\n  return (\n    <div className={cn(\"relative h-80 overflow-hidden rounded-md\", className)}>\n      {/* CRT screen effect */}\n      <motion.div\n        className=\"absolute inset-0 z-10 rounded-md\"\n        style={{\n          boxShadow: \"inset 0 0 100px rgba(0, 60, 0, 0.5)\",\n          background: \"radial-gradient(circle, transparent 30%, black 150%)\",\n        }}\n      />\n\n      {/* Scanlines */}\n      {scanlines && (\n        <div className=\"bg-scanlines absolute inset-0 z-20 opacity-10\" />\n      )}\n\n      {/* Flicker effect */}\n      {flicker && (\n        <motion.div\n          className=\"absolute inset-0 z-30 bg-white opacity-0\"\n          animate={{ opacity: [0, 0.02, 0, 0.01, 0] }}\n          transition={{\n            repeat: Number.POSITIVE_INFINITY,\n            duration: 5,\n            repeatType: \"loop\",\n          }}\n        />\n      )}\n\n      {/* Glitch effect */}\n      {glitch && glitchActive && (\n        <motion.div\n          className=\"absolute inset-0 z-40 overflow-hidden\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n        >\n          <motion.div\n            className=\"absolute inset-0 bg-green-500 opacity-10\"\n            animate={{\n              x: [0, -10, 5, -2, 0],\n              opacity: [0, 0.1, 0.05, 0.15, 0],\n            }}\n            transition={{ duration: 0.2 }}\n          />\n          <motion.div\n            className=\"absolute inset-0 bg-red-500 opacity-10\"\n            animate={{\n              x: [0, 10, -5, 2, 0],\n              opacity: [0, 0.1, 0.05, 0.15, 0],\n            }}\n            transition={{ duration: 0.2, delay: 0.05 }}\n          />\n        </motion.div>\n      )}\n\n      <BaseTerminal\n        className=\"relative z-0 border-green-900 bg-black/90 font-mono text-green-500\"\n        prompt=\"C:>\"\n        welcomeMessage={[\n          \"RETRO-OS v1.0\",\n          \"Copyright (c) 1985-1995\",\n          \"All rights reserved.\",\n          \"\",\n          \"Type 'help' for available commands.\",\n        ]}\n        {...props}\n      />\n\n      <style jsx global>{`\n        .bg-scanlines {\n          background: linear-gradient(\n            to bottom,\n            transparent 50%,\n            rgba(0, 0, 0, 0.2) 51%\n          );\n          background-size: 100% 4px;\n        }\n      `}</style>\n    </div>\n  );\n}\n",
      "path": "/components/code-clamp/terminal/retro-terminal.tsx",
      "target": "/components/code-clamp/retro-terminal.tsx"
    }
  ]
}